From e49a53b0a4c8bceb5245824db5e8cfe94a482696 Mon Sep 17 00:00:00 2001
From: Joseph Myers <joseph@codesourcery.com>
Date: Fri, 30 Oct 2020 21:40:25 +0000
Subject: [PATCH 18/20] Disable spurious -Warray-bounds for ypclnt.c (bug
 26687)

Included among the GCC 11 warnings listed in bug 26687, but not fixed
when that bug was marked as FIXED, are -Warray-bounds warnings in
nis/ypclnt.c.  These are all for different calls to the same piece of
code, which already has a comment explaining that the element accessed
is in a common prefix of the various structures.  On the basis of that
comment, this patch treats the warning as a false positive and
disables it for that code.

Tested with build-many-glibcs.py for arm-linux-gnueabi, where,
together with my previous two patches, this allows the build of glibc
to complete with GCC 11 (further build failures appear in the
testsuite).

Reviewed-by: DJ Delorie <dj@redhat.com>
(cherry picked from commit 882774658cb8daee4c16677a3fd674f6052cc157)
Signed-off-by: Jeffy Chen <jeffy.chen@rock-chips.com>
---
 nis/ypclnt.c | 8 ++++++++
 1 file changed, 8 insertions(+)

diff --git a/nis/ypclnt.c b/nis/ypclnt.c
index 210daebf..4db26c75 100644
--- a/nis/ypclnt.c
+++ b/nis/ypclnt.c
@@ -30,6 +30,7 @@
 #include <sys/uio.h>
 #include <libc-lock.h>
 #include <shlib-compat.h>
+#include <libc-diag.h>
 
 /* This should only be defined on systems with a BSD compatible ypbind */
 #ifndef BINDINGDIR
@@ -368,12 +369,19 @@ do_ypcall_tr (const char *domain, u_long prog, xdrproc_t xargs,
 	      caddr_t req, xdrproc_t xres, caddr_t resp)
 {
   int status = do_ypcall (domain, prog, xargs, req, xres, resp);
+  DIAG_PUSH_NEEDS_COMMENT;
+  /* This cast results in a warning that a ypresp_val is partly
+     outside the bounds of the actual object referenced, but as
+     explained below only the stat element (in a common prefix) is
+     accessed.  */
+  DIAG_IGNORE_NEEDS_COMMENT (11, "-Warray-bounds");
   if (status == YPERR_SUCCESS)
     /* We cast to ypresp_val although the pointer could also be of
        type ypresp_key_val or ypresp_master or ypresp_order or
        ypresp_maplist.  But the stat element is in a common prefix so
        this does not matter.  */
     status = ypprot_err (((struct ypresp_val *) resp)->stat);
+  DIAG_POP_NEEDS_COMMENT;
   return status;
 }
 
-- 
2.20.1

